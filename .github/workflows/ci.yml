name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore Lerna (Cache)
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --frozen-lockfile

      - name: Run Linters
        run: yarn lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore Lerna (Cache)
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --frozen-lockfile

      - name: Run Tests
        run: yarn test
        
      - name: Fix Coverage Paths
        working-directory: ./coverage
        run: sed -i 's@'$GITHUB_WORKSPACE/'@/github/workspace/@g' lcov.info
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
#       - name: Upload Coverage Report
#         uses: actions/upload-artifact@v2
#         with:
#           name: lcov-report
#           path: coverage/lcov.info
      
      - name: Send Coverage Report to Codacy
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage/lcov.info
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
     
#   sonarcloud:
#     name: SonarCloud
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Download the Coverage Report
#         uses: actions/download-artifact@v2
#         with:
#           name: lcov-report
#           path: coverage/lcov.info
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#       - name: SonarCloud Scan
#         uses: SonarSource/sonarcloud-github-action@master
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
